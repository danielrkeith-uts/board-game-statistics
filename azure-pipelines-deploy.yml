# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '8b97bc68-f8e6-43a5-9ea2-5118f3304e65'

  # Web app name
  webAppName: 'board-game-statistics'

  # Environment name
  environmentName: 'board-game-statistics'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  azureStaticDeploymentToken: '6bb73151b54b08810367bbf2d55df63bcdd4130b1331827380ecaca536b012c203-5cea05e1-f234-4489-b51d-c695f53d5ea90001826037351e00'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: Maven@4
      displayName: 'Maven Package'
      env:
        BGS_DB_URL: ""
        BGS_DB_USERNAME: ""
        BGS_DB_PASSWORD: ""
        BGS_ADMIN_PASSWORD: ""
        BGS_MAIL_USERNAME: $(MAIL_USERNAME)
        BGS_MAIL_PASSWORD: $(MAIL_PASSWORD)
      inputs:
        mavenPomFile: 'board-game-statistics-api/pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.21'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'clean package'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)/backend

    - publish: $(Build.ArtifactStagingDirectory)/backend
      artifact: backend

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployJavaWebApp
    displayName: Deploy Java Web App
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: backend

          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: board-game-statistics'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              package: '$(Pipeline.Workspace)/backend/**/target/*.?(war|jar)'

  - deployment: BuildAndDeployReactStaticWebApp
    displayName: Build and Deploy React Static Web App
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: NodeTool@0
            inputs:
                versionSpec: '20.x'
            displayName: 'Install Node.js'

          - task: Npm@1
            inputs:
                command: 'install'
                workingDir: 'board-game-statistics'
            displayName: 'Npm Install'

          - task: Npm@1
            inputs:
                command: 'custom'
                workingDir: 'board-game-statistics'
                customCommand: 'run build'
            displayName: 'Build'

          - task: AzureStaticWebApp@0
            displayName: 'Azure Static Web App Deploy: board-game-statistics'
            inputs:
              app_location: 'board-game-statistics/dist'
              skip_app_build: true
              skip_api_build: true
              azure_static_web_apps_api_token: '$(azureStaticDeploymentToken)'

